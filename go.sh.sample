#!/bin/sh
#
# Shell script that will build the example code, clear out the Neo4J database
# and run the validation tool, via the Java example.
#
# Note: the validation tool itself requires additional setup, please review the
# "Dependencies" and "Installation" sections of https://github.com/AlfrescoLabs/technical-validation
# for details.
#
alias meh=mvn

# Tunables
NEO4J_DB_DIR=/usr/local/Cellar/neo4j/2.1.3/libexec/data/
NEO4J_URL=http://localhost:7474/db/data/
EXTENSION_DIR=#### PATH TO AN EXTENSION TO TEST - IT SHOULD HAVE SUBDIRS "source" AND "binaries" ####

if [ ! -d ${NEO4J_DB_DIR} ]; then
  echo "Could not find ${NEO4J_DB_DIR} - is Neo4J installed in that directory?"
  exit -1
fi

# Note: the ATV checks these anyway, but rather than dropping a nasty stack trace, we'll check here first
if [ ! -d ${EXTENSION_DIR} ]; then
  echo "Could not find ${EXTENSION_DIR} - is an extension in that directory?"
  exit -1
fi

if [ ! -d ${EXTENSION_DIR}/source ]; then
  echo "Could not find ${EXTENSION_DIR}/source - is the source of the extension in that directory?"
  exit -1
fi

if [ ! -d ${EXTENSION_DIR}/binaries ]; then
  echo "Could not find ${EXTENSION_DIR}/binaries - are the binaries for the extension in that directory?"
  exit -1
fi

# Build - meh
meh clean package

rc=$?
if [[ $rc != 0 ]] ; then
  exit $rc
fi 

# Truncate the Neo4J database
neo4j stop > /dev/null
rm -rf ${NEO4J_DB_DIR}/graph.db
rm -f  ${NEO4J_DB_DIR}/keystore
rm -rf ${NEO4J_DB_DIR}/log
rm -f  ${NEO4J_DB_DIR}/rrd
neo4j start > /dev/null

# Run the Java example uberjar
java -jar target/java-example-1.0-SNAPSHOT.jar ${EXTENSION_DIR}/source/ ${EXTENSION_DIR}/binaries/ ${NEO4J_URL}
